# Generated by Django 4.2.11 on 2025-01-20 20:38

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    replaces = [
        ('vocabulary', '0001_initial'),
        ('vocabulary', '0002_auto_20150511_1942'),
        ('vocabulary', '0003_vocabulary_user'),
        ('vocabulary', '0004_private'),
        ('vocabulary', '0005_vocabulary_source'),
        ('vocabulary', '0006_ondelete_protect'),
        ('vocabulary', '0007_vocabulary_force_unique_nodeid'),
        ('vocabulary', '0008_allow_longer_node_ids'),
        ('vocabulary', '0009_authority_users'),
        ('vocabulary', '0010_authority_website'),
        ('vocabulary', '0011_onto_relations'),
        ('vocabulary', '0012_longer_vocab_desc_and_public_by_default'),
        ('vocabulary', '0013_object_is_predicate'),
        ('vocabulary', '0014_vocabulary_predicates'),
        ('vocabulary', '0015_alter_vocabulary_source'),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AttributeOption',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('name', models.SlugField(max_length=100, verbose_name='Attribute name')),
                (
                    'validation',
                    models.CharField(
                        choices=[
                            (
                                'vocabulary.validation_utils.validation_simple',
                                'One or more characters',
                            ),
                            ('vocabulary.validation_utils.validation_integer', 'Integer number'),
                            ('vocabulary.validation_utils.validation_yesno', 'Yes or No'),
                            ('vocabulary.validation_utils.validation_decimal', 'Decimal number'),
                        ],
                        max_length=100,
                        verbose_name='Field Validations',
                    ),
                ),
                ('sort_order', models.IntegerField(default=1, verbose_name='Sort Order')),
                (
                    'error_message',
                    models.CharField(
                        default='Invalid Entry', max_length=100, verbose_name='Error Message'
                    ),
                ),
            ],
            options={
                'db_table': 'concepts_attribute_options',
                'ordering': ('sort_order',),
            },
        ),
        migrations.CreateModel(
            name='Authority',
            fields=[
                (
                    'code',
                    models.CharField(
                        help_text='Uppercase shorthand, no spaces, only set once',
                        max_length=5,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Authorities',
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'node_id',
                    models.SlugField(blank=True, max_length=60, verbose_name='Permalink ID'),
                ),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(blank=True, null=True)),
                ('query', models.TextField(blank=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                (
                    'parent',
                    models.ManyToManyField(
                        blank=True, related_name='children', to='vocabulary.concept'
                    ),
                ),
                (
                    'related',
                    models.ManyToManyField(
                        blank=True, related_name='related_concepts', to='vocabulary.concept'
                    ),
                ),
            ],
            options={
                'db_table': 'concepts',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConceptAttribute',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                (
                    'concept',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='vocabulary.concept'
                    ),
                ),
                (
                    'option',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='vocabulary.attributeoption'
                    ),
                ),
            ],
            options={
                'db_table': 'concepts_attributes',
                'verbose_name_plural': 'Notes: Concept Attributes',
                'verbose_name': 'Note: Concept Attribute',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                (
                    'iso',
                    models.CharField(
                        max_length=5, primary_key=True, serialize=False, verbose_name='ISO code'
                    ),
                ),
                ('name', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('node_id', models.SlugField(max_length=60, verbose_name='Permalink: /tree/')),
                ('title', models.CharField(max_length=75)),
                ('description', models.TextField(blank=True, max_length=200, null=True)),
                ('queries', models.BooleanField(default=False, verbose_name='Enable queries?')),
                ('updated_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                (
                    'authority',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to='vocabulary.authority',
                    ),
                ),
                (
                    'language',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to='vocabulary.language',
                    ),
                ),
                (
                    'private',
                    models.BooleanField(
                        default=True,
                        help_text='Private vocabulary can be edited only by the users belonging to its authority.',
                        verbose_name='Private vocabulary',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL
                    ),
                ),
                ('source', models.URLField(blank=True)),
            ],
            options={
                'db_table': 'vocabularies',
                'verbose_name_plural': 'Vocabularies',
            },
        ),
        migrations.AddField(
            model_name='concept',
            name='vocabulary',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to='vocabulary.vocabulary'
            ),
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=150)),
                (
                    'concept',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='vocabulary.concept'
                    ),
                ),
            ],
            options={
                'db_table': 'concepts_synonyms',
                'unique_together': {('concept', 'name')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='concept',
            unique_together={('node_id', 'vocabulary')},
        ),
        migrations.AlterField(
            model_name='vocabulary',
            name='node_id',
            field=models.SlugField(max_length=60, unique=True, verbose_name='Permalink: /tree/'),
        ),
        migrations.AlterField(
            model_name='concept',
            name='node_id',
            field=models.SlugField(blank=True, max_length=127, verbose_name='Permalink ID'),
        ),
        migrations.AddField(
            model_name='authority',
            name='users',
            field=models.ManyToManyField(
                help_text='Authority can have many users. Vocabulary can have one authority.',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='authority',
            name='website',
            field=models.URLField(blank=True),
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'object_value_type',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('char', 'One or more characters'),
                            ('bool', 'Yes or No'),
                            ('json', 'Valid JSON'),
                            ('int', 'Integer number'),
                            ('dec', 'Decimal number'),
                        ],
                        max_length=4,
                        null=True,
                        verbose_name='Object type',
                    ),
                ),
                (
                    'object_value',
                    models.TextField(blank=True, null=True, verbose_name='Object value'),
                ),
            ],
            options={
                'verbose_name': 'Concept Relation',
                'verbose_name_plural': 'Concept Relations',
                'db_table': 'concept_relations',
            },
        ),
        migrations.RemoveField(
            model_name='conceptattribute',
            name='concept',
        ),
        migrations.RemoveField(
            model_name='conceptattribute',
            name='option',
        ),
        migrations.AlterUniqueTogether(
            name='synonym',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='synonym',
            name='concept',
        ),
        migrations.RemoveField(
            model_name='concept',
            name='related',
        ),
        migrations.AddField(
            model_name='concept',
            name='related',
            field=models.ManyToManyField(
                blank=True, through='vocabulary.Relation', to='vocabulary.concept'
            ),
        ),
        migrations.DeleteModel(
            name='AttributeOption',
        ),
        migrations.DeleteModel(
            name='ConceptAttribute',
        ),
        migrations.DeleteModel(
            name='Synonym',
        ),
        migrations.AddField(
            model_name='relation',
            name='object',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='object',
                to='vocabulary.concept',
            ),
        ),
        migrations.AddField(
            model_name='relation',
            name='predicate',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='predicate',
                to='vocabulary.concept',
            ),
        ),
        migrations.AddField(
            model_name='relation',
            name='subject',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='subject',
                to='vocabulary.concept',
            ),
        ),
        migrations.AlterField(
            model_name='vocabulary',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='vocabulary',
            name='private',
            field=models.BooleanField(
                default=False,
                help_text='Private vocabulary can be edited only by the users belonging to its authority.',
                verbose_name='Private vocabulary (paid members only)',
            ),
        ),
        migrations.AlterField(
            model_name='relation',
            name='object',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='object',
                to='vocabulary.concept',
            ),
        ),
        migrations.AlterField(
            model_name='relation',
            name='predicate',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='predicate',
                to='vocabulary.concept',
            ),
        ),
        migrations.AddField(
            model_name='vocabulary',
            name='predicates',
            field=models.ManyToManyField(
                blank=True, related_name='predicates', to='vocabulary.concept'
            ),
        ),
        migrations.AlterField(
            model_name='vocabulary',
            name='source',
            field=models.URLField(blank=True, null=True),
        ),
    ]
